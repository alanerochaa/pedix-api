# ========================================
# Application
# ========================================
spring.application.name=pedix-api

# ========================================
#  Database - Oracle (Docker Compose)
# ========================================
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:oracle:thin:@oracle:1521/XEPDB1}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:fiap_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:FiapApp123}
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# ========================================
# Connection Pool (HikariCP)
# ========================================
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000

# ========================================
# JPA / Hibernate
# ========================================
# O banco Oracle do Docker Compose inicia vazio.
# 'update' permite ao Hibernate criar automaticamente as tabelas no schema do usuário.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# ========================================
# Script de inicialização
# ========================================
# Nenhum script SQL será executado automaticamente.
spring.sql.init.mode=never

# ========================================
# Logging SQL (opcional, para debug)
# ========================================
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ========================================
# Swagger / OpenAPI
# ========================================
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
